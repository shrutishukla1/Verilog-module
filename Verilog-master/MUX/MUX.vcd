$date
	Sat Oct 24 22:13:25 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module mux_16x1_test $end
$var wire 1 ! out $end
$var reg 16 " in [15:0] $end
$var reg 4 # sel [3:0] $end
$scope module uut $end
$var wire 16 $ in [15:0] $end
$var wire 4 % sel [3:0] $end
$var wire 4 & t [3:0] $end
$var wire 1 ! out $end
$scope module M0 $end
$var wire 4 ' in [3:0] $end
$var wire 2 ( sel [1:0] $end
$var wire 1 ) out $end
$upscope $end
$scope module M1 $end
$var wire 4 * in [3:0] $end
$var wire 2 + sel [1:0] $end
$var wire 1 , out $end
$upscope $end
$scope module M2 $end
$var wire 4 - in [3:0] $end
$var wire 2 . sel [1:0] $end
$var wire 1 / out $end
$upscope $end
$scope module M3 $end
$var wire 4 0 in [3:0] $end
$var wire 2 1 sel [1:0] $end
$var wire 1 2 out $end
$upscope $end
$scope module M4 $end
$var wire 4 3 in [3:0] $end
$var wire 2 4 sel [1:0] $end
$var wire 1 ! out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 4
bx 3
x2
bx 1
bx 0
x/
bx .
bx -
x,
bx +
bx *
x)
bx (
bx '
bx &
bx %
bx $
bx #
bx "
x!
$end
#200
0!
0)
b1 (
1,
b1 +
1/
b1 .
b110 &
b110 3
02
b1 1
b0 4
b1100 '
b110 *
b11 -
b0 0
b1 #
b1 %
b1101101100 "
b1101101100 $
#400
1!
1)
b11 (
0,
b11 +
b1 &
b1 3
0/
b11 .
b11 1
b11 #
b11 %
#600
0)
b0 (
b0 +
b100 &
b100 3
1/
b0 .
b0 1
0!
b1 4
b100 #
b100 %
#800
1)
b11 (
b11 +
b1 &
b1 3
0/
b11 .
b11 1
b111 #
b111 %
#1000
